{"version":3,"sources":["components/list.js","components/prez.js","components/sec.js","components/vpz.js","components/wcm.js","components/tre.js","components/org.js","views/base/tabs/Tabs.js"],"names":["List","nam","pic","selectCandidate","selectedCandidate","selected","yesornoselectedbgcolor","selectedbgcolor","bgcolor","cnm","yesorno","ballot","useState","background","choose","Fragment","className","height","width","src","api","fxns","resources","cnt","pct","color","onClick","no","pid","handleNo","Prez","props","state","candidates","bind","console","log","utils","findcandidates","this","setState","rd","votes","JSON","parse","localStorage","getItem","prz","setItem","stringify","map","candidate","xs","sm","md","key","rid","rnm","React","Component","Sec","yn","sec","Wcm","wcm","Tre","tre","Org","org","Tabs","variant"],"mappings":"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","file":"static/js/32.c86ab4cd.chunk.js","sourcesContent":["import React,{ useState, useEffect } from 'react';\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CButton,\n} from '@coreui/react'\n\n\nimport api from '../appstate/api';\n\nconst List = ({nam,pic,selectCandidate,selectedCandidate,selected,yesornoselectedbgcolor,selectedbgcolor,bgcolor,cnm,yesorno,ballot}) => {\n\n  const [color, setColor] = useState(bgcolor)\n//  console.log(color);\n \n\n  const handleClick = () => {\n    // const rec = !selected.selected;\n    // selected.selected = rec;\n    // const background = selected ? selectedbgcolor : bgcolor;\n    // setColor(background)\n    \n    selectCandidate(selected,false)\n  }\n\n  const handleNo = () => {\n\n    var no = {};\n    no.rid = \"49\";no.nam=\"No\";no.pic=\"sample.png\";no.pid=selected.pid;\n\n    selectCandidate(no,true)\n  }\n\n  let background = selectedCandidate ? selectedbgcolor : bgcolor;\n  if(yesornoselectedbgcolor){\n    background = 'nocolor';\n  }\n  const choose = yesorno ? 'Yes' : 'Choose';\n \n  return (\n    <React.Fragment>\n          <CCard className={\"selection \" +background}>\n            <CCardHeader className={\"selection \" +background}>\n              <h5 className=\"title\">{cnm}</h5>\n            </CCardHeader>\n            <CCardBody>\n              <img height=\"200\" width=\"400\" src={api.fxns.resources+pic} className=\"card-img-top\" />\n              <h4>{nam}</h4>\n\n              { !ballot &&\n                <>\n                <h3>{selected.cnt} Votes</h3> <br/>\n                <h2>{selected.pct} %</h2>\n                </>\n              }\n            </CCardBody>\n            { ballot &&\n            <CCardFooter>\n              <CButton color=\"primary\" className=\"px-4\"  onClick={() => handleClick()}>{ choose }</CButton>\n              { yesorno && <CButton color=\"primary\" className=\"px-4\" onClick={() => handleNo()}>NO</CButton>}\n            </CCardFooter>\n          }\n          </CCard>\n    </React.Fragment>\n  );\n}\n\n\nexport default List;\n","\nimport React from 'react'\n\nimport {\n  CCol,\n} from '@coreui/react'\nimport List from './list';\nimport api from '../appstate/api';\n\nexport default class Prez extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      selectedCandidate:'',\n      candidates: []\n    }\n\n    this.selectCandidate = this.selectCandidate.bind(this)\n  }\n  componentWillMount(){\n    console.log(api.utils.findcandidates('PRZ'));\n    \n    this.setState({candidates: api.utils.findcandidates('PRZ')})\n  }\n\n\n  selectCandidate(rd){\n    // const selected = !rd.selected;\n    // rd.selected = selected;\n    let votes = JSON.parse(localStorage.getItem('votes'))\n    votes.prz=rd\n    localStorage.setItem('votes',JSON.stringify(votes))\n    this.setState({ selectedCandidate: rd });\n  }\n\n  render () {\n    // const { data } = this.props;\n    // var cards = this.renderList(data)\n    // console.log(this.state.selectedCandidate);\n    return (\n      <div>\n        <div className='row'>\n        {this.state.candidates.map(candidate => {\n            return (\n              <CCol xs=\"12\" sm=\"6\" md=\"3\">\n              <List\n                key={`dd-item-${candidate.rid}`}\n                nam={candidate.nam}\n                pic={candidate.pic}\n                selected={candidate}\n                selectedbgcolor='purple'\n                bgcolor=\"white\"\n                selectCandidate={this.selectCandidate}\n                selectedCandidate={candidate === this.state.selectedCandidate}\n                cnm={candidate.rnm}\n                ballot={this.props.ballot}\n              />\n              </CCol>\n            );\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n","\nimport React from 'react'\nimport {\n  CCol,\n} from '@coreui/react'\n\nimport List from './list';\nimport api from '../appstate/api';\n\nexport default class Sec extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      selectedCandidate:'',\n      yesornoselectedbgcolor:false,\n      candidates: []\n    }\n\n    this.selectCandidate = this.selectCandidate.bind(this)\n  }\n  componentWillMount(){\n    this.setState({candidates: api.utils.findcandidates('SEC')})\n  }\n\n\n  selectCandidate(rd,yn){\n    // const selected = !rd.selected;\n    // rd.selected = selected;\n    let votes = JSON.parse(localStorage.getItem('votes'))\n    votes.sec=rd\n    localStorage.setItem('votes',JSON.stringify(votes))\n    this.setState({ selectedCandidate: rd,yesornoselectedbgcolor: yn  });\n  }\n\n  render () {\n    // const { data } = this.props;\n    // var cards = this.renderList(data)\n    // console.log(this.state.selectedCandidate);\n    return (\n      <div>\n        <div className='row'>\n        {this.state.candidates.map(candidate => {\n            return (\n              <CCol xs=\"12\" sm=\"6\" md=\"3\">\n              <List\n                key={`dd-item-${candidate.rid}`}\n                nam={candidate.nam}\n                pic={candidate.pic}\n                selected={candidate}\n                selectedbgcolor='purple'\n                bgcolor=\"white\"\n                selectCandidate={this.selectCandidate}\n                selectedCandidate={candidate === this.state.selectedCandidate}\n                cnm={candidate.rnm}\n                yesorno={true}\n                yesornoselectedbgcolor={this.state.yesornoselectedbgcolor}\n \n                ballot={this.props.ballot}\n              />\n              </CCol>\n            );\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n","\nimport React from 'react'\nimport {\n    CCol,\n  } from '@coreui/react'\nimport List from './list';\nimport api from '../appstate/api';\n\nexport default class Vpz extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      selectedCandidate:'',\n      candidates: []\n    }\n\n    this.selectCandidate = this.selectCandidate.bind(this)\n  }\n  componentWillMount(){\n    this.setState({candidates: api.utils.findcandidates('VPZ')})\n  }\n\n\n  selectCandidate(rd){\n    // const selected = !rd.selected;\n    // rd.selected = selected;\n    let votes = JSON.parse(localStorage.getItem('votes'))\n    votes.vpz=rd\n    localStorage.setItem('votes',JSON.stringify(votes))\n    this.setState({ selectedCandidate: rd });\n  }\n\n  render () {\n    // const { data } = this.props;\n    // var cards = this.renderList(data)\n    // console.log(this.state.selectedCandidate);\n    return (\n      <div>\n        <div className='row'>\n        {this.state.candidates.map(candidate => {\n            return (\n                <CCol xs=\"12\" sm=\"6\" md=\"3\">\n              <List\n                key={`dd-item-${candidate.rid}`}\n                nam={candidate.nam}\n                pic={candidate.pic}\n                selected={candidate}\n                selectedbgcolor='purple'\n                bgcolor=\"white\"\n                selectCandidate={this.selectCandidate}\n                selectedCandidate={candidate === this.state.selectedCandidate}\n                cnm={candidate.rnm}\n                ballot={this.props.ballot}\n              />\n              </CCol>\n            );\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n","\nimport React from 'react'\nimport {\n  CCol,\n} from '@coreui/react';\n\nimport List from './list';\nimport api from '../appstate/api';\n\nexport default class Wcm extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      selectedCandidate:'',\n      yesornoselectedbgcolor:false,\n      candidates: []\n    }\n\n    this.selectCandidate = this.selectCandidate.bind(this)\n  }\n  componentWillMount(){\n    this.setState({candidates: api.utils.findcandidates('WOC')})\n  }\n\n\n  selectCandidate(rd,yn){\n    // const selected = !rd.selected;\n    // rd.selected = selected;\n    let votes = JSON.parse(localStorage.getItem('votes'))\n    votes.wcm=rd\n    localStorage.setItem('votes',JSON.stringify(votes))\n    this.setState({ selectedCandidate: rd, yesornoselectedbgcolor: yn });\n  }\n\n  render () {\n    // const { data } = this.props;\n    // var cards = this.renderList(data)\n    // console.log(this.state.selectedCandidate);\n    return (\n      <div>\n        <div className='row'>\n        {this.state.candidates.map(candidate => {\n            return (\n              <CCol xs=\"12\" sm=\"6\" md=\"3\">\n              <List\n                key={`dd-item-${candidate.rid}`}\n                nam={candidate.nam}\n                pic={candidate.pic}\n                selected={candidate}\n                selectedbgcolor='purple'\n                bgcolor=\"white\"\n                selectCandidate={this.selectCandidate}\n                selectedCandidate={candidate === this.state.selectedCandidate}\n                cnm={candidate.rnm}\n                yesorno={true}\n                yesornoselectedbgcolor={this.state.yesornoselectedbgcolor}\n                ballot={this.props.ballot}\n              />\n              </CCol>\n            );\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n","\nimport React from 'react'\nimport {\n    CCol,\n  } from '@coreui/react'\n\nimport List from './list';\nimport api from '../appstate/api';\n\nexport default class Tre extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      selectedCandidate:'',\n      yesornoselectedbgcolor:false,\n      candidates: []\n    }\n\n    this.selectCandidate = this.selectCandidate.bind(this)\n  }\n  componentWillMount(){\n    this.setState({candidates: api.utils.findcandidates('TRE')})\n  }\n\n\n  selectCandidate(rd, yn){\n    // const selected = !rd.selected;\n    // rd.selected = selected;\n    let votes = JSON.parse(localStorage.getItem('votes'))\n    votes.tre=rd\n    localStorage.setItem('votes',JSON.stringify(votes))\n    this.setState({ selectedCandidate: rd,yesornoselectedbgcolor: yn });\n  }\n\n  render () {\n    // const { data } = this.props;\n    // var cards = this.renderList(data)\n    // console.log(this.state.selectedCandidate);\n    return (\n      <div>\n        <div className='row'>\n        {this.state.candidates.map(candidate => {\n            return (\n                <CCol xs=\"12\" sm=\"6\" md=\"4\">\n              <List\n                key={`dd-item-${candidate.rid}`}\n                nam={candidate.nam}\n                pic={candidate.pic}\n                selected={candidate}\n                selectedbgcolor='purple'\n                bgcolor=\"white\"\n                selectCandidate={this.selectCandidate}\n                selectedCandidate={candidate === this.state.selectedCandidate}\n                cnm={candidate.rnm}\n                yesorno={false}\n                yesornoselectedbgcolor={''}\n                ballot={this.props.ballot}\n              />\n              </CCol>\n            );\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n","\nimport React from 'react'\nimport {\n  CCol,\n} from '@coreui/react'\nimport List from './list';\nimport api from '../appstate/api';\n\nexport default class Org extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      selectedCandidate:'',\n      yesornoselectedbgcolor:false,\n      candidates: []\n    }\n\n    this.selectCandidate = this.selectCandidate.bind(this)\n  }\n  componentWillMount(){\n    this.setState({candidates: api.utils.findcandidates('ORG')})\n  }\n\n\n  selectCandidate(rd,yn){\n    // const selected = !rd.selected;\n    // rd.selected = selected;\n    let votes = JSON.parse(localStorage.getItem('votes'))\n    votes.org=rd\n    localStorage.setItem('votes',JSON.stringify(votes))\n    this.setState({ selectedCandidate: rd,  yesornoselectedbgcolor: yn});\n  }\n\n  render () {\n    // const { data } = this.props;\n    // var cards = this.renderList(data)\n    // console.log(this.state.selectedCandidate);\n    return (\n      <div>\n        <div className='row'>\n        {this.state.candidates.map(candidate => {\n            return (\n              <CCol xs=\"12\" sm=\"6\" md=\"3\">\n              <List\n                key={`dd-item-${candidate.rid}`}\n                nam={candidate.nam}\n                pic={candidate.pic}\n                selected={candidate}\n                selectedbgcolor='purple'\n                bgcolor=\"white\"\n                selectCandidate={this.selectCandidate}\n                selectedCandidate={candidate === this.state.selectedCandidate}\n                cnm={candidate.rnm}\n                yesorno={true}\n                yesornoselectedbgcolor={this.state.yesornoselectedbgcolor}\n                ballot={this.props.ballot}\n              />\n              </CCol>\n            );\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { useState } from 'react'\nimport {\n  CCol,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CRow,\n  CTabContent,\n  CTabPane,\n  CCard,\n  CCardBody,\n  CTabs,\n  CCardHeader\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react';\n\nimport api from '../../../appstate/api';\nimport List from '../../../components/list';\nimport Prez from '../../../components/prez';\nimport Vpz from '../../../components/vpz';\nimport Sec from '../../../components/sec';\nimport Wcm from '../../../components/wcm';\nimport Tre from '../../../components/tre';\nimport Org from '../../../components/org';\n \nconst Tabs = () => {\n  // const [active, setActive] = useState(1)\n  const [selectedCandidate, setSelectedCandidate] = useState('')\n  \n  const candidates = (pos) => {\n    return api.utils.findcandidates(pos);\n  }\n\n  const selectCandidate = (rd)=>{\n    // const selected = !rd.selected;\n    // rd.selected = selected;\n    let votes = JSON.parse(localStorage.getItem('votes'))\n    votes.prz=rd\n    localStorage.setItem('votes',JSON.stringify(votes))\n    setSelectedCandidate(rd)\n  }\n\n  // const position = (pos) => {\n  //   let c = candidates(pos);\n\n  //   let f = c.map((candidate,key) => <CCol xs=\"12\" sm=\"6\" md=\"3\" key={`dd-item-${candidate.rid}`}><List\n            \n  //           nam={candidate.nam}\n  //           pic={candidate.pic}\n  //           selected={candidate}\n  //           selectedbgcolor='purple'\n  //           bgcolor=\"white\"\n  //           selectCandidate={() => selectCandidate(candidate)}\n  //           selectedCandidate={candidate === selectedCandidate}\n  //           cnm={candidate.rnm}\n  //           ballot={true}\n  //         /></CCol>);\n    \n  //   return f;\n  // }\n\n  return (\n    <CRow>\n      {/* <CCol xs=\"12\" md=\"12\" className=\"mb-4\"> */}\n        <CCard>\n          <CCardHeader>\n            Candidates\n          </CCardHeader>\n          <CCardBody>\n            <CTabs>\n              <CNav variant=\"tabs\">\n                <CNavItem>\n                  <CNavLink>\n                    President\n                  </CNavLink>\n                </CNavItem>\n                <CNavItem>\n                  <CNavLink>\n                    Secretary\n                  </CNavLink>\n                </CNavItem>\n                <CNavItem>\n                  <CNavLink>\n                    Treasurer\n                  </CNavLink>\n                </CNavItem>\n                <CNavItem>\n                  <CNavLink>\n                    Organiser\n                  </CNavLink>\n                </CNavItem>\n                <CNavItem>\n                  <CNavLink>\n                    WOCOM\n                  </CNavLink>\n                </CNavItem>\n              </CNav>\n              <CTabContent>\n                <CTabPane>\n                  <CRow>\n                    <Prez  ballot={true}/>\n                  </CRow>\n                </CTabPane>\n                <CTabPane>\n                <CRow>\n                  <Sec ballot={true}/>\n                </CRow>\n                </CTabPane>\n                <CTabPane>\n                <CRow>\n                  <Tre ballot={true} />\n                </CRow>\n                </CTabPane>\n                <CTabPane>\n                <CRow>\n                  <Org ballot={true} />\n                </CRow>\n                </CTabPane>\n                <CTabPane>\n                <CRow>\n                  <Wcm ballot={true} />\n                </CRow>\n                </CTabPane>\n              </CTabContent>\n            </CTabs>\n          </CCardBody>\n        </CCard>\n      {/* </CCol> */}\n    </CRow>\n  )\n}\n\nexport default Tabs\n"],"sourceRoot":""}